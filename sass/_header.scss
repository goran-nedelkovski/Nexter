.header {
    background-color: $color-grey-dark-1;
    grid-column: full-start / col-end 6;
    background-image: linear-gradient(rgba($color-secondary, .93),rgba($color-secondary, .93)), url(../img/hero.jpeg); //to make the backgr0img darker (or Overlay) we use the old trick with linear-gradient(color, color); the second img url(../img/)->must go one level up t.e. out of the compiled css folder (to the initial project) and from there we go to the img folder
    background-size: cover;       // or 100% (cover) to fill all header container
    background-position: center;
    padding: 8rem;
    padding-top: 4rem;

    display: grid;  
    grid-template-rows: 1fr min-content minmax(6rem, min-content) 1fr;//with minmax(min value is 6rem when is on one row line, and the max value is the min-content when the text will go on new lines) in the 3rd row, the h1 will be fully responsive(won't overlapping/overflowing)   // the entire row is 80vh and also the header will have 80vh
    grid-template-columns: minmax(min-content, max-content);  //to be fully responsive, we must set with minmax()  a range between min and max-content // to avoid that big space on the right side, we reduce the column size(width) to be according to the max-content(max content width).
    grid-row-gap: 1.5rem;
    justify-content: center;
    &__logo {
        height: 3rem;
        justify-self: center;
    }
    &__btn {
        align-self: start;
        justify-self: start;
    }
    &__seenon-text {                 
        display: grid;              // as default, css align the elements in a new row, but here we want 3 columns
        grid-template-columns: 1fr max-content 1fr;   //1fr for the :: before and ::after elements/lines(thet'll ocupied all the remaining space) and the text(max-content) is in the middle  
        grid-column-gap: 1.5rem;      // 1fr is for dinamic spacing in vertical direction when increase/decrease the vh (that rows with 1fr are grow and shrink t.e. the rows's size changed)
        align-items: center;       //vertically align(center) the elements

        font-size: 1.6rem;
        color: $color-grey-light-2;
    
        &::before,           // ::before, ::after and the text will be the 3 grid elements
        &::after {
            content: "";    // must set content:"", because without this it will not work 
            height: 1px;
            display: block;
            background-color: currentColor;
        }
    }
    &__seenon-logos {
        display: grid;
        grid-template-columns: repeat(4, 1fr);  // 4 equal columns
        grid-column-gap: 3rem;          // the margin(gutter) between the columns
        justify-items: center;         //to center the items in there grid-cells horizontaly along the main x axis
        align-items: center;
        img {
            max-height: 2.5rem;   // instead of fix height, we can set to min-height(max-height), so the height can be less then 2.5rem
            max-width: 100%;      // to can scale properly (img) for responsivnes, we must specify also the max-width: 100%; so the width can be less then 100%(but,they won't scale because the grid-template-columns:max-content(it attend to be as wide as possible to fill/fit the max-text regardless of the vw)), and we need to change that in the grid-template-columns:.....;
            filter: brightness(70%);     // brightness(100%) is the default(light), and to darker the images=> filter:brighthes(70%)
        }
    }
}