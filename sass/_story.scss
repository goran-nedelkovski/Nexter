.story {

    &__pictures {
        background-color: $color-primary;
        grid-column: full-start / col-end 4;
        background-image: linear-gradient(rgba($color-primary, .5),rgba($color-primary, .5)), url(../img/back.jpg);   // Overlay the bg-image with linear-gradient()
        background-size: cover;
        display: grid;
        grid-template-rows: repeat(6, 1fr);
        grid-template-columns: repeat(6, 1fr);
        align-items: center;       // center the grid-items (images) in the middle along the y-axis (vertically)
        @media only screen and (max-width:$bp-medium) {
            grid-column: full-start / full-end;      // or 1/-1 because at this breakpoint we want this part to be from end to end(also for the content below)
            padding: 6rem;
        }
    }
    &__img--1 {
        width: 100%;    //always specify width of the img in %(relative unit) to be flexible(responsive)
        // height: 100%;  // images by default has aspect ratio(pre defined dimensions and they attend to keep them), and if we want to center the img, we can use align-items: center
        grid-row: 2/6;
        grid-column: 2/6;
        @media only screen and (max-width:$bp-medium) {
            grid-column: 1 / 5;
            grid-row: 1 / -1;
        }
    }
    &__img--2 {     
        width: 115%;       // to overlapping the image out of the grid-container
        // height: 100%;
        align-self: stretch;  // instead of height:100%(because the img is too big on Chrome) we can use align-self:stretch
        grid-row: 4/6;
        grid-column: 4/7;
        //position: relative;
        z-index: 20;         // to see all hidden parts of the image
        @media only screen and (max-width:$bp-medium) {
            grid-row: 2 / 6;
            width: 100%;
        }
    }
    &__content {
        background-color: $color-grey-light-1;
        grid-column:  col-start 5 / full-end;
        padding: 6rem 8vw;              // for responsivnes, 8% of vw=>padding has changed as the vieport's width has changed  

        // display: flex;
        // flex-direction: column;
        // justify-content: center;
        // align-items: flex-start;

        display: grid;
        align-content: center;        // align all grid-tracks(grid items) in vertical direction
        justify-items: start;         // align items along the row axix
        @media only screen and (max-width:$bp-medium) {
            grid-column: full-start / full-end;  //overrighting this part 
            grid-row: 5 / 6;              // because we want the content to be up(first)
        }
    }
    &__text {
        font-size: 1.5rem;
        font-style: italic;
        margin-bottom: 4rem;

    }
}